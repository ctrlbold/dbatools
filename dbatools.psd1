#
# Module manifest for module 'dbatools'
#
# Generated by: Chrissy LeMaire
#
# Generated on: 9/8/2015
#
@{
	
	# Script module or binary module file associated with this manifest.
	RootModule = 'dbatools.psm1'
	
	# Version number of this module.
	ModuleVersion = '0.9.000'
	
	# ID used to uniquely identify this module
	GUID = '9d139310-ce45-41ce-8e8b-d76335aa1789'
	
	# Author of this module
	Author = 'Chrissy LeMaire'
	
	# Company or vendor of this module
	CompanyName = 'dbatools.io'
	
	# Copyright statement for this module
	Copyright = '2017 Chrissy LeMaire'
	
	# Description of the functionality provided by this module
	Description = 'Provides extra functionality for SQL Server Database admins and enables SQL Server instance migrations.'
	
	# Minimum version of the Windows PowerShell engine required by this module
	PowerShellVersion = '3.0'
	
	# Name of the Windows PowerShell host required by this module
	PowerShellHostName = ''
	
	# Minimum version of the Windows PowerShell host required by this module
	PowerShellHostVersion = ''
	
	# Minimum version of the .NET Framework required by this module
	DotNetFrameworkVersion = ''
	
	# Minimum version of the common language runtime (CLR) required by this module
	CLRVersion = ''
	
	# Processor architecture (None, X86, Amd64, IA64) required by this module
	ProcessorArchitecture = ''
	
	# Modules that must be imported into the global environment prior to importing this module
	RequiredModules = @()
	
	# Assemblies that must be loaded prior to importing this module
	RequiredAssemblies = @()
	
	# Script files () that are run in the caller's environment prior to importing this module
	ScriptsToProcess = @()
	
	# Type files (xml) to be loaded when importing this module
	TypesToProcess = @()
	
	# Format files (xml) to be loaded when importing this module
	# "xml\dbatools.Format.ps1xml"
	FormatsToProcess = @("xml\dbatools.Format.ps1xml")
	
	# Modules to import as nested modules of the module specified in ModuleToProcess
	NestedModules = @()
	
	# Functions to export from this module
	FunctionsToExport = @(
		'Start-SqlMigration',
		'Copy-SqlDatabase',
		'Copy-SqlLogin',
		'Copy-SqlServerAgent',
		'Copy-SqlSpConfigure',
		'Copy-SqlLinkedServer',
		'Copy-SqlDatabaseMail',
		'Copy-SqlDatabaseAssembly',
		'Copy-SqlPolicyManagement',
		'Copy-SqlSharedSchedule',
		'Copy-SqlOperator',
		'Copy-SqlJob',
		'Copy-SqlDataCollector',
		'Copy-SqlCustomError',
		'Copy-SqlAuditSpecification',
		'Copy-SqlEndpoint',
		'Copy-SqlAudit',
		'Copy-SqlServerRole',
		'Copy-SqlResourceGovernor',
		'Copy-SqlExtendedEvent',
		'Copy-SqlBackupDevice',
		'Copy-SqlServerTrigger',
		'Copy-SqlCredential',
		'Copy-SqlCentralManagementServer',
		'Copy-SqlSysDbUserObjects',
		'Copy-SqlProxyAccount',
		'Copy-SqlAlert',
		'Import-SqlSpConfigure',
		'Export-SqlSpConfigure'
		'Get-DbaDetachedDatabaseInfo',
		'Restore-SqlBackupFromDirectory',
		'Test-SqlConnection',
		'Import-CsvToSql',
		'Copy-SqlAgentCategory',
		'Update-dbatools',
		'Test-SqlPath',
		'Sync-SqlLoginPermissions',
		'Export-SqlLogin',
		'Get-SqlServerKey',
		'Reset-SqlAdmin',
		'Watch-SqlDbLogin',
		'Expand-SqlTLogResponsibly',
		'Test-SqlMigrationConstraint',
		'Get-SqlRegisteredServerName',
		'Test-SqlNetworkLatency',
		'Find-SqlDuplicateIndex',
		'Show-SqlServerFileSystem',
		'Get-DbaDiskSpace',
		'Remove-SqlDatabaseSafely',
		'Show-SqlDatabaseList',
		'Show-SqlWhoIsActive',
		'Set-SqlTempDbConfiguration',
		'Test-SqlTempDbConfiguration',
		'Repair-SqlOrphanUser',
		'Remove-SqlOrphanUser',
		'Find-SqlUnusedIndex',
		'Install-SqlWhoIsActive',
		'Update-SqlWhoIsActive',
		'Test-DbaDiskAllocation',
		'Test-DbaPowerPlan',
		'Set-DbaPowerPlan',
		'Test-DbaDiskAlignment',
		'Get-DbaDatabaseFreespace',
		'Get-DbaClusterActiveNode',
		'Test-DbaDatabaseOwner',
		'Set-DbaDatabaseOwner',
		'Test-DbaJobOwner',
		'Set-DbaJobOwner',
		'Test-DbaVirtualLogFile',
		'Get-DbaRestoreHistory',
		'Get-DbaTcpPort',
		'Test-DbaDatabaseCompatibility',
		'Test-DbaDatabaseCollation',
		'Test-DbaConnectionAuthScheme',
		'Test-DbaServerName',
		'Repair-DbaServerName',
		'Stop-DbaProcess',
		'Copy-SqlSsisCatalog',
		'Find-DbaOrphanedFile',
		'Get-DbaAvailabilityGroup',
		'Get-DbaLastGoodCheckDb',
		'Get-DbaProcess',
		'Get-DbaRunningJob',
		'Set-DbaMaxDop',
		'Test-DbaFullRecoveryModel',
		'Test-DbaMaxDop',
		'Remove-DbaBackup',
		'Get-DbaPermission',
		'Get-DbaLastBackup',
		'Connect-DbaSqlServer',
		'Get-DbaStartupParameter',
		'Get-DbaMemoryUsage',
		'Get-DbaBackupHistory',
		'Read-DbaBackupHeader',
		'Test-DbaLastBackup',
		'Get-DbaMaxMemory',
		'Set-DbaMaxMemory',
		'Test-DbaMaxMemory',
		'Get-DbaDatabaseSnapshot',
		'Remove-DbaDatabaseSnapshot',
		'Get-DbaRoleMember',
		'Resolve-DbaNetworkName',
		'Test-DbaValidLogin',
		'Get-DbaMemoryUsage',
		'Export-DbaAvailabilityGroup',
		'Out-DbaDataTable',
		'Write-DbaDataTable',
		'New-DbaDatabaseSnapshot',
		'Restore-DbaFromDatabaseSnapshot',
		'Get-DbaTrigger',
		'Invoke-Sqlcmd2',
		'Export-SqlUser',
		'Get-DbaDatabaseState',
		'Set-DbaDatabaseState',
		'Move-DbaDatabaseFile',
		'Get-DbaHelpIndex',
		'Get-DbaAgentAlert',
		'Get-DbaAgentOperator',
		'Get-DbaPageFileSetting',
		'Get-DbaSpConfigure',
		'Rename-DbaLogin',
		'Find-DbaAgentJob',
		'Find-DbaDatabase',
		'Get-DbaMsdtc',
		'Get-DbaUptime',
		'Get-DbaXEventsSession',
		'Test-DbaOptimizeForAdHoc',
		'Find-DbaStoredProcedure',
		'Measure-DbaBackupThroughput',
		'Find-DbaLoginInGroup',
		'Get-DbaSpn',
		'Test-DbaSpn',
		'Set-DbaSpn',
		'Remove-DbaSpn',
		'Get-DbaDatabase',
		'Find-DbaUserObject',
		'Get-DbaSqlService',
		'Get-DbaDependency',
		'Clear-DbaSqlConnectionPool',
		'Find-DbaCommand',
		'Get-DbaConfig',
		'Get-DbaConfigValue',
		'Set-DbaConfig',
		'Get-DbaClientProtocol',
		'Backup-DbaDatabase',
		'New-DbaSqlDirectory',
		'Get-DbaPrivilege',
		'Install-DbaWatchUpdate',
		'Watch-DbaUpdate',
		'Uninstall-DbaWatchUpdate',
		'Get-DbaQueryStoreConfig',
		'Set-DbaQueryStoreConfig',
		'Restore-DbaDatabase',
		'Copy-DbaQueryStoreConfig',
		'Get-DbaExecutionPlan',
		'Export-DbaExecutionPlan',
		'Get-DbaServerProtocol',
		'Get-DbaLocaleSetting',
		'Get-DbaSqlBuildReference',
		'Set-DbaSpConfigure',
		'Test-DbaIdentityUsage',
		'Get-DbaDatabaseAssembly',
		'Get-DbaAgentJob',
		'Get-DbaCustomError',
		'Get-DbaCredential',
		'Get-DbaBackupDevice',
		'Get-DbaServerAuditSpecification',
		'Get-DbaJobCategory',
		'Get-DbaDatabaseEncryption',
		'New-DbaSsisCatalog',
		'Remove-DbaDatabase',
		'Get-DbaQueryExecutionTime',
		'Get-DbaTempdbUsage',
		'Find-DbaDatabaseGrowthEvent',
		'Get-DbaNetworkActivity',
		'Get-DbaWhoisActive',
		'Get-DbaAgentJobOutputFile',
		'Set-DbaAgentJobOutputFile',
		'Test-DbaLinkedServerConnection',
		'Get-DbaDatabaseFile',
		'Read-DbaTransactionLog',
		'Get-DbaTable',
		'Invoke-DbaDatabaseShrink',
		'Get-DbaEstimatedCompletionTime',
		'Export-DbaScript',
		'New-DbaScriptingOption',
		'Get-DbaLogin'
		'Get-DbaLinkedServer',
		'Set-DbaStartupParameter',
		'New-DbaAgentJob'
		#'Invoke-DbaLogShippingRecovery',
	)
	
	# Cmdlets to export from this module
	CmdletsToExport = '*'
	
	# Variables to export from this module
	VariablesToExport = '*'
	
	# Aliases to export from this module
	# Aliases are stored in dbatools.psm1
	AliasesToExport = 'Reset-SqlSaPassword',
	'Copy-SqlUserDefinedMessage',
	'Copy-SqlJobServer',
	'Restore-HallengrenBackup',
	'Update-SqlWhoIsActive',
	'Show-SqlMigrationConstraint',
	'Test-SqlDiskAllocation',
	'Get-DiskSpace',
	'Get-SqlMaxMemory',
	'Set-SqlMaxMemory'
	
	# List of all modules packaged with this module
	ModuleList = @()
	
	# List of all files packaged with this module
	FileList = ''
	
	PrivateData = @{
		# PSData is module packaging and gallery metadata embedded in PrivateData
		# It's for rebuilding PowerShellGet (and PoshCode) NuGet-style packages
		# We had to do this because it's the only place we're allowed to extend the manifest
		# https://connect.microsoft.com/PowerShell/feedback/details/421837
		PSData = @{
			# The primary categorization of this module (from the TechNet Gallery tech tree).
			Category = "Databases"
			
			# Keyword tags to help users find this module via navigations and search.
			Tags = @('sqlserver', 'migrations', 'sql', 'dba', 'databases')
			
			# The web address of an icon which can be used in galleries to represent this module
			IconUri = "https://dbatools.io/logo.png"
			
			# The web address of this module's project or support homepage.
			ProjectUri = "https://dbatools.io"
			
			# The web address of this module's license. Points to a page that's embeddable and linkable.
			LicenseUri = "http://www.gnu.org/licenses/gpl-3.0.en.html"
			
			# Release notes for this particular version of the module
			ReleaseNotes = "https://dbatools.io/releases"
			
			# If true, the LicenseUrl points to an end-user license (not just a source license) which requires the user agreement before use.
			# RequireLicenseAcceptance = ""
			
			# Indicates this is a pre-release/testing version of the module.
			IsPrerelease = 'True'
		}
	}
}

# SIG # Begin signature block
# MIIcbwYJKoZIhvcNAQcCoIIcYDCCHFwCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUVh5HeBSF0bc7BlaGxmUCNMft
# qvCggheeMIIFJzCCBA+gAwIBAgIQChuYqG2/P+oNcSoM5PlmATANBgkqhkiG9w0B
# AQsFADByMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYD
# VQQLExB3d3cuZGlnaWNlcnQuY29tMTEwLwYDVQQDEyhEaWdpQ2VydCBTSEEyIEFz
# c3VyZWQgSUQgQ29kZSBTaWduaW5nIENBMB4XDTE3MDQyNDAwMDAwMFoXDTE4MDUw
# MjEyMDAwMFowZDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkxBMRAwDgYDVQQHEwdD
# cm93bGV5MRowGAYDVQQKExFDaHJpc3RpbmEgTGVNYWlyZTEaMBgGA1UEAxMRQ2hy
# aXN0aW5hIExlTWFpcmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7
# mkV28xCGG/rD4yhjpDPRZAjZtTulDRBeLnaIeF1CoHyhzMjCCYvV9avjS0V41os2
# /obamRWTwhK3x/6LLEFUNUWcufmuBa5um3b5QWUId2S9XLvmrjuv/3F9ClFbdoki
# zqijPTYT3nz4jBWYYgcSu3NhJ/5cr5/f3xHzfI3G15kIYpw5GcNAiEVmCjE1Ahdc
# HFYqyIAZlOzdbDEhgnp3jh5l85zRXcAjlZ2EmnWoRu2j0XTnaeCe0WhZOmVDsQfA
# qHSmrux+IdASqrl1NmOEhI4cbhMVdsLa7zJTa98KT8ZPG8DX7KIqf7HjiqU7DMwv
# BQq5Q6G0pyTZOvFZSrLpAgMBAAGjggHFMIIBwTAfBgNVHSMEGDAWgBRaxLl7Kgqj
# pepxA8Bg+S32ZXUOWDAdBgNVHQ4EFgQUrFS9TIKvUqHurtINfUDxFAOuQnEwDgYD
# VR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMHcGA1UdHwRwMG4wNaAz
# oDGGL2h0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9zaGEyLWFzc3VyZWQtY3MtZzEu
# Y3JsMDWgM6Axhi9odHRwOi8vY3JsNC5kaWdpY2VydC5jb20vc2hhMi1hc3N1cmVk
# LWNzLWcxLmNybDBMBgNVHSAERTBDMDcGCWCGSAGG/WwDATAqMCgGCCsGAQUFBwIB
# FhxodHRwczovL3d3dy5kaWdpY2VydC5jb20vQ1BTMAgGBmeBDAEEATCBhAYIKwYB
# BQUHAQEEeDB2MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5jb20w
# TgYIKwYBBQUHMAKGQmh0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2Vy
# dFNIQTJBc3N1cmVkSURDb2RlU2lnbmluZ0NBLmNydDAMBgNVHRMBAf8EAjAAMA0G
# CSqGSIb3DQEBCwUAA4IBAQCqqtrG6dUKf6nf/XbWv745jP8wHdBSPeQhpLE4U2kN
# elWOvovcYrMJyOtvd+k7kAC7ZBw3D0I5d0/ep3e0nrPAa8yJoiPGUzQoPFU+WAbw
# wLSl6N97MBRS8bE/KHzXkEcs68EcAvRYCL5D7uCLNOChA8thZNFBt121TfyWDsvj
# JsYcRgR8aSKFTcM31q4AfbLEOUfzriKEC1Bhfh61fV4uY8fEYOTW9zzY658RwAKX
# xN6OUSSQkb4mzdG6sW/3+0J0ZahbK2YULtwvsREWnRw2U5So66BqBCWtHqfDgYs+
# /X/e9n884BUFjc0kM/hZrVGdAAIKJwfYBNjiAbVp6NlMMIIFMDCCBBigAwIBAgIQ
# BAkYG1/Vu2Z1U0O1b5VQCDANBgkqhkiG9w0BAQsFADBlMQswCQYDVQQGEwJVUzEV
# MBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29t
# MSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwHhcNMTMxMDIy
# MTIwMDAwWhcNMjgxMDIyMTIwMDAwWjByMQswCQYDVQQGEwJVUzEVMBMGA1UEChMM
# RGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMTEwLwYDVQQD
# EyhEaWdpQ2VydCBTSEEyIEFzc3VyZWQgSUQgQ29kZSBTaWduaW5nIENBMIIBIjAN
# BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+NOzHH8OEa9ndwfTCzFJGc/Q+0WZ
# sTrbRPV/5aid2zLXcep2nQUut4/6kkPApfmJ1DcZ17aq8JyGpdglrA55KDp+6dFn
# 08b7KSfH03sjlOSRI5aQd4L5oYQjZhJUM1B0sSgmuyRpwsJS8hRniolF1C2ho+mI
# LCCVrhxKhwjfDPXiTWAYvqrEsq5wMWYzcT6scKKrzn/pfMuSoeU7MRzP6vIK5Fe7
# SrXpdOYr/mzLfnQ5Ng2Q7+S1TqSp6moKq4TzrGdOtcT3jNEgJSPrCGQ+UpbB8g8S
# 9MWOD8Gi6CxR93O8vYWxYoNzQYIH5DiLanMg0A9kczyen6Yzqf0Z3yWT0QIDAQAB
# o4IBzTCCAckwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwEwYD
# VR0lBAwwCgYIKwYBBQUHAwMweQYIKwYBBQUHAQEEbTBrMCQGCCsGAQUFBzABhhho
# dHRwOi8vb2NzcC5kaWdpY2VydC5jb20wQwYIKwYBBQUHMAKGN2h0dHA6Ly9jYWNl
# cnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcnQwgYEG
# A1UdHwR6MHgwOqA4oDaGNGh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2Vy
# dEFzc3VyZWRJRFJvb3RDQS5jcmwwOqA4oDaGNGh0dHA6Ly9jcmwzLmRpZ2ljZXJ0
# LmNvbS9EaWdpQ2VydEFzc3VyZWRJRFJvb3RDQS5jcmwwTwYDVR0gBEgwRjA4Bgpg
# hkgBhv1sAAIEMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3LmRpZ2ljZXJ0LmNv
# bS9DUFMwCgYIYIZIAYb9bAMwHQYDVR0OBBYEFFrEuXsqCqOl6nEDwGD5LfZldQ5Y
# MB8GA1UdIwQYMBaAFEXroq/0ksuCMS1Ri6enIZ3zbcgPMA0GCSqGSIb3DQEBCwUA
# A4IBAQA+7A1aJLPzItEVyCx8JSl2qB1dHC06GsTvMGHXfgtg/cM9D8Svi/3vKt8g
# VTew4fbRknUPUbRupY5a4l4kgU4QpO4/cY5jDhNLrddfRHnzNhQGivecRk5c/5Cx
# GwcOkRX7uq+1UcKNJK4kxscnKqEpKBo6cSgCPC6Ro8AlEeKcFEehemhor5unXCBc
# 2XGxDI+7qPjFEmifz0DLQESlE/DmZAwlCEIysjaKJAL+L3J+HNdJRZboWR3p+nRk
# a7LrZkPas7CM1ekN3fYBIM6ZMWM9CBoYs4GbT8aTEAb8B4H6i9r5gkn3Ym6hU/oS
# lBiFLpKR6mhsRDKyZqHnGKSaZFHvMIIGajCCBVKgAwIBAgIQAwGaAjr/WLFr1tXq
# 5hfwZjANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGln
# aUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhE
# aWdpQ2VydCBBc3N1cmVkIElEIENBLTEwHhcNMTQxMDIyMDAwMDAwWhcNMjQxMDIy
# MDAwMDAwWjBHMQswCQYDVQQGEwJVUzERMA8GA1UEChMIRGlnaUNlcnQxJTAjBgNV
# BAMTHERpZ2lDZXJ0IFRpbWVzdGFtcCBSZXNwb25kZXIwggEiMA0GCSqGSIb3DQEB
# AQUAA4IBDwAwggEKAoIBAQCjZF38fLPggjXg4PbGKuZJdTvMbuBTqZ8fZFnmfGt/
# a4ydVfiS457VWmNbAklQ2YPOb2bu3cuF6V+l+dSHdIhEOxnJ5fWRn8YUOawk6qhL
# LJGJzF4o9GS2ULf1ErNzlgpno75hn67z/RJ4dQ6mWxT9RSOOhkRVfRiGBYxVh3lI
# RvfKDo2n3k5f4qi2LVkCYYhhchhoubh87ubnNC8xd4EwH7s2AY3vJ+P3mvBMMWSN
# 4+v6GYeofs/sjAw2W3rBerh4x8kGLkYQyI3oBGDbvHN0+k7Y/qpA8bLOcEaD6dpA
# oVk62RUJV5lWMJPzyWHM0AjMa+xiQpGsAsDvpPCJEY93AgMBAAGjggM1MIIDMTAO
# BgNVHQ8BAf8EBAMCB4AwDAYDVR0TAQH/BAIwADAWBgNVHSUBAf8EDDAKBggrBgEF
# BQcDCDCCAb8GA1UdIASCAbYwggGyMIIBoQYJYIZIAYb9bAcBMIIBkjAoBggrBgEF
# BQcCARYcaHR0cHM6Ly93d3cuZGlnaWNlcnQuY29tL0NQUzCCAWQGCCsGAQUFBwIC
# MIIBVh6CAVIAQQBuAHkAIAB1AHMAZQAgAG8AZgAgAHQAaABpAHMAIABDAGUAcgB0
# AGkAZgBpAGMAYQB0AGUAIABjAG8AbgBzAHQAaQB0AHUAdABlAHMAIABhAGMAYwBl
# AHAAdABhAG4AYwBlACAAbwBmACAAdABoAGUAIABEAGkAZwBpAEMAZQByAHQAIABD
# AFAALwBDAFAAUwAgAGEAbgBkACAAdABoAGUAIABSAGUAbAB5AGkAbgBnACAAUABh
# AHIAdAB5ACAAQQBnAHIAZQBlAG0AZQBuAHQAIAB3AGgAaQBjAGgAIABsAGkAbQBp
# AHQAIABsAGkAYQBiAGkAbABpAHQAeQAgAGEAbgBkACAAYQByAGUAIABpAG4AYwBv
# AHIAcABvAHIAYQB0AGUAZAAgAGgAZQByAGUAaQBuACAAYgB5ACAAcgBlAGYAZQBy
# AGUAbgBjAGUALjALBglghkgBhv1sAxUwHwYDVR0jBBgwFoAUFQASKxOYspkH7R7f
# or5XDStnAs0wHQYDVR0OBBYEFGFaTSS2STKdSip5GoNL9B6Jwcp9MH0GA1UdHwR2
# MHQwOKA2oDSGMmh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEFzc3Vy
# ZWRJRENBLTEuY3JsMDigNqA0hjJodHRwOi8vY3JsNC5kaWdpY2VydC5jb20vRGln
# aUNlcnRBc3N1cmVkSURDQS0xLmNybDB3BggrBgEFBQcBAQRrMGkwJAYIKwYBBQUH
# MAGGGGh0dHA6Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBBBggrBgEFBQcwAoY1aHR0cDov
# L2NhY2VydHMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0QXNzdXJlZElEQ0EtMS5jcnQw
# DQYJKoZIhvcNAQEFBQADggEBAJ0lfhszTbImgVybhs4jIA+Ah+WI//+x1GosMe06
# FxlxF82pG7xaFjkAneNshORaQPveBgGMN/qbsZ0kfv4gpFetW7easGAm6mlXIV00
# Lx9xsIOUGQVrNZAQoHuXx/Y/5+IRQaa9YtnwJz04HShvOlIJ8OxwYtNiS7Dgc6aS
# wNOOMdgv420XEwbu5AO2FKvzj0OncZ0h3RTKFV2SQdr5D4HRmXQNJsQOfxu19aDx
# xncGKBXp2JPlVRbwuwqrHNtcSCdmyKOLChzlldquxC5ZoGHd2vNtomHpigtt7BIY
# vfdVVEADkitrwlHCCkivsNRu4PQUCjob4489yq9qjXvc2EQwggbNMIIFtaADAgEC
# AhAG/fkDlgOt6gAK6z8nu7obMA0GCSqGSIb3DQEBBQUAMGUxCzAJBgNVBAYTAlVT
# MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
# b20xJDAiBgNVBAMTG0RpZ2lDZXJ0IEFzc3VyZWQgSUQgUm9vdCBDQTAeFw0wNjEx
# MTAwMDAwMDBaFw0yMTExMTAwMDAwMDBaMGIxCzAJBgNVBAYTAlVTMRUwEwYDVQQK
# EwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xITAfBgNV
# BAMTGERpZ2lDZXJ0IEFzc3VyZWQgSUQgQ0EtMTCCASIwDQYJKoZIhvcNAQEBBQAD
# ggEPADCCAQoCggEBAOiCLZn5ysJClaWAc0Bw0p5WVFypxNJBBo/JM/xNRZFcgZ/t
# LJz4FlnfnrUkFcKYubR3SdyJxArar8tea+2tsHEx6886QAxGTZPsi3o2CAOrDDT+
# GEmC/sfHMUiAfB6iD5IOUMnGh+s2P9gww/+m9/uizW9zI/6sVgWQ8DIhFonGcIj5
# BZd9o8dD3QLoOz3tsUGj7T++25VIxO4es/K8DCuZ0MZdEkKB4YNugnM/JksUkK5Z
# ZgrEjb7SzgaurYRvSISbT0C58Uzyr5j79s5AXVz2qPEvr+yJIvJrGGWxwXOt1/HY
# zx4KdFxCuGh+t9V3CidWfA9ipD8yFGCV/QcEogkCAwEAAaOCA3owggN2MA4GA1Ud
# DwEB/wQEAwIBhjA7BgNVHSUENDAyBggrBgEFBQcDAQYIKwYBBQUHAwIGCCsGAQUF
# BwMDBggrBgEFBQcDBAYIKwYBBQUHAwgwggHSBgNVHSAEggHJMIIBxTCCAbQGCmCG
# SAGG/WwAAQQwggGkMDoGCCsGAQUFBwIBFi5odHRwOi8vd3d3LmRpZ2ljZXJ0LmNv
# bS9zc2wtY3BzLXJlcG9zaXRvcnkuaHRtMIIBZAYIKwYBBQUHAgIwggFWHoIBUgBB
# AG4AeQAgAHUAcwBlACAAbwBmACAAdABoAGkAcwAgAEMAZQByAHQAaQBmAGkAYwBh
# AHQAZQAgAGMAbwBuAHMAdABpAHQAdQB0AGUAcwAgAGEAYwBjAGUAcAB0AGEAbgBj
# AGUAIABvAGYAIAB0AGgAZQAgAEQAaQBnAGkAQwBlAHIAdAAgAEMAUAAvAEMAUABT
# ACAAYQBuAGQAIAB0AGgAZQAgAFIAZQBsAHkAaQBuAGcAIABQAGEAcgB0AHkAIABB
# AGcAcgBlAGUAbQBlAG4AdAAgAHcAaABpAGMAaAAgAGwAaQBtAGkAdAAgAGwAaQBh
# AGIAaQBsAGkAdAB5ACAAYQBuAGQAIABhAHIAZQAgAGkAbgBjAG8AcgBwAG8AcgBh
# AHQAZQBkACAAaABlAHIAZQBpAG4AIABiAHkAIAByAGUAZgBlAHIAZQBuAGMAZQAu
# MAsGCWCGSAGG/WwDFTASBgNVHRMBAf8ECDAGAQH/AgEAMHkGCCsGAQUFBwEBBG0w
# azAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tMEMGCCsGAQUF
# BzAChjdodHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRBc3N1cmVk
# SURSb290Q0EuY3J0MIGBBgNVHR8EejB4MDqgOKA2hjRodHRwOi8vY3JsMy5kaWdp
# Y2VydC5jb20vRGlnaUNlcnRBc3N1cmVkSURSb290Q0EuY3JsMDqgOKA2hjRodHRw
# Oi8vY3JsNC5kaWdpY2VydC5jb20vRGlnaUNlcnRBc3N1cmVkSURSb290Q0EuY3Js
# MB0GA1UdDgQWBBQVABIrE5iymQftHt+ivlcNK2cCzTAfBgNVHSMEGDAWgBRF66Kv
# 9JLLgjEtUYunpyGd823IDzANBgkqhkiG9w0BAQUFAAOCAQEARlA+ybcoJKc4HbZb
# Ka9Sz1LpMUerVlx71Q0LQbPv7HUfdDjyslxhopyVw1Dkgrkj0bo6hnKtOHisdV0X
# FzRyR4WUVtHruzaEd8wkpfMEGVWp5+Pnq2LN+4stkMLA0rWUvV5PsQXSDj0aqRRb
# poYxYqioM+SbOafE9c4deHaUJXPkKqvPnHZL7V/CSxbkS3BMAIke/MV5vEwSV/5f
# 4R68Al2o/vsHOE8Nxl2RuQ9nRc3Wg+3nkg2NsWmMT/tZ4CMP0qquAHzunEIOz5HX
# J7cW7g/DvXwKoO4sCFWFIrjrGBpN/CohrUkxg0eVd3HcsRtLSxwQnHcUwZ1PL1qV
# CCkQJjGCBDswggQ3AgEBMIGGMHIxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdp
# Q2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xMTAvBgNVBAMTKERp
# Z2lDZXJ0IFNIQTIgQXNzdXJlZCBJRCBDb2RlIFNpZ25pbmcgQ0ECEAobmKhtvz/q
# DXEqDOT5ZgEwCQYFKw4DAhoFAKB4MBgGCisGAQQBgjcCAQwxCjAIoAKAAKECgAAw
# GQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEOMAwGCisG
# AQQBgjcCARUwIwYJKoZIhvcNAQkEMRYEFA/0+mhoQzzg6WxUrQhVHUvCHK9pMA0G
# CSqGSIb3DQEBAQUABIIBAFFRnG/u8cTXR9A4xBK3XF6kwDOlMg63dzBvQXPhR/RI
# vm4AM8b/0zSwTaK0UoMLhsb1YrIM0PcjIGVaaPEH45Y3IEJmJ7Rklv0iojg/W5pF
# kQhMLfxdL4SfrJha54qBMgQEaVPdxa0/HLfgkThpE/ktUgGSck1Vyl0DN9vUncA5
# A1hCawFLx/VLtB5QXU2gTtc/REwdhL8n9vDWck1mVl8nu7JFO3tXd43iDheVN3xr
# 30Fs8xHwSVVHj9Su8rp4LFCOlnBVzBMAVeC0Ws1riPZ/EndxSwvpcvCKpJbdAgAX
# F0gez6Y0JNY09gIFd3W5IjrX7SAnypZ9xC+kFV5DSJ2hggIPMIICCwYJKoZIhvcN
# AQkGMYIB/DCCAfgCAQEwdjBiMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNl
# cnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhEaWdp
# Q2VydCBBc3N1cmVkIElEIENBLTECEAMBmgI6/1ixa9bV6uYX8GYwCQYFKw4DAhoF
# AKBdMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE3
# MDQyNTExNDk1M1owIwYJKoZIhvcNAQkEMRYEFClwpxBJdt9gi9CJDdN1R93tgiQP
# MA0GCSqGSIb3DQEBAQUABIIBAFPu++LBBrLv3i1ADsP9CvjYbkqwaRiJ0faj0NEM
# IOps83D31pVAE+x1K5OyVo08sU4kEu1aYK9s50EZYZFHPn6LxByDhpIvOv+UhPqg
# VaXWUAOVU8ie2aN5D+piDGmwRn9Y1a/kS6Wn7I2hXQLpBk1PlrX0FY1l83X5YwnW
# KEHbdFV4G0X6T1pRTiwBQ6YwHx9VlNAbD6pvgBWoPVsM5angJww1DyMK++b72i9B
# U7HNDdJPQI09Iy1uEnPm9s6cPGhPDquo06bR0hDH247sl7Mewu43Gqe09DIGvo8k
# d9vN2Uvh8Ql0bAsFINhcnKMeEyGq27sDbbcD3TdDSbDD7R0=
# SIG # End signature block
