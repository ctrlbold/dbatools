name: Run Cross Platform Tests
on: [push]
defaults:
  run:
    shell: pwsh
jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - uses: actions/checkout@v2

      - name:  Download docker images - extra word
        run: mkdir -p  ~/cache

      - id: image-cache
        uses: actions/cache@v1
        with:
            path:  ~/cache
            key: docker-image-cache-${{ runner.os }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          docker pull dbatools/sqlinstance
          docker pull dbatools/sqlinstance2
          docker save $(docker images -q dbatools/sqlinstance*) -o  ~/cache/docker.tar

      - if: steps.image-cache.outputs.cache-hit == 'true'
        run: docker load -i  ~/cache/docker.tar

      - name:  Download docker images
        run: |
          # create a shared network
          docker network create localnet

          # setup two containers and expose ports
          docker run -p 1433:1433 -p 5022:5022 --network localnet --hostname dockersql1 --name dockersql1 -d dbatools/sqlinstance
          docker run -p 14333:1433 -p 5023:5023  --network localnet --hostname dockersql2 --name dockersql2 -d dbatools/sqlinstance2

      - name: Download other docker image
        run: |
          #docker pull mcr.microsoft.com/mssql/server:2019-latest
          #docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=dbatools.IO" -p 14335:1433 --name sql1 -h sql1 -d mcr.microsoft.com/mssql/server:2019-latest

      - name: ðŸ‘¥ Clone appveyor repo
        working-directory: /tmp
        run: |
          gh repo clone sqlcollaborative/appveyor-lab

      - name: Get list, run test
        run: |
          Import-Module ./dbatools.psm1 -Force
          $commands = Get-XPlatVariable | Where-Object { $PSItem -notmatch "Copy-","Migration" } | Sort-Object
          $commands
          docker images -q